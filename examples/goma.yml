# Goma Gateway Configuration File
version: 1.0
gateway:
  # Timeouts in seconds
  writeTimeout: 15          # Maximum duration for writing to a client.
  readTimeout: 15           # Maximum duration for reading from a client.
  idleTimeout: 30           # Maximum duration to keep idle connections open.

  # TLS Configuration
  sslCertFile: ''           # Path to SSL Certificate file (e.g., cert.pem).
  sslKeyFile: ''            # Path to SSL Private Key file (e.g., key.pem).

  # Rate Limiting
  rateLimit: 0              # Maximum number of requests per minute (0 = no limit, IP-based).

  # Logging Configuration
  logLevel: info            # Logging level (options: debug, trace, off).
  accessLog: "/dev/Stdout"  # Path for access logs.
  errorLog: "/dev/stderr"   # Path for error logs.

  # Redis Configuration
  # redis:
  #   addr: redis:6379     # Redis server address.
  #   password: password   # Redis password (optional).



  # Health Check Configuration
  disableHealthCheckStatus: false   # Disable overall health check status.
  disableRouteHealthCheckError: false # Disable backend route health check errors.

  # Display Options
  disableDisplayRouteOnStart: false  # Disable route display at startup.
  disableKeepAlive: false            # Disable Keep-Alive for the server.

  # Security Features
  blockCommonExploits: false         # Block common exploits (e.g., SQL Injection, XSS).

  # Error Interception
  errorInterceptor:
    enabled: true                    # Enable backend error interception.
    contentType: "application/json"  # Response Content-Type for intercepted errors.
    errors:
      - code: 401
        body: ""                     # Custom response body for HTTP 401 errors.
      - code: 404
        body: "{\"success\":false,\"code\":404,\"message\":\"Page not found\",\"data\":[]}" # Raw JSON response for 404.
      - code: 500
        body: "Internal server error" # Custom response body for HTTP 500 errors.

  # Cross-Origin Resource Sharing (CORS)
  cors:
    origins:                         # Global allowed origins.
      - http://localhost:8080
      - https://example.com
    headers:                         # Global allowed headers.
      Access-Control-Allow-Headers: 'Origin, Authorization, Accept, Content-Type, Access-Control-Allow-Headers, X-Client-Id, X-Session-Id'
      Access-Control-Allow-Credentials: 'true'
      Access-Control-Max-Age: 1728000
  # Additional Routes
  extraConfig:
    # Path for additional configuration files (e.g., routes and middleware), default /etc/goma/extra.
    directory: /etc/goma/extra
    watch: true                 # Enable live monitoring for changes in the directory.
  # Route Definitions
  routes:
    # Route Example 1
    - path: /
      name: Public
      hosts: []                      # Optional host-based routing.
      rewrite: /                     # Rewrite request paths (e.g., /store to /).
      destination: https://example.com
      methods: [POST, PUT, GET]      # Allowed HTTP methods for this route.
      disableHostForwarding: false   # Disable forwarding the host header.
      cors:                          # Route-specific CORS configuration (overrides global).
        origins:
          - https://dev.example.com
        headers:
          Access-Control-Allow-Methods: 'GET'
      middlewares:                   # List of middlewares for this route.
        - api-forbidden-paths

    # Route Example 2
    - path: /protected
      name: Basic Auth
      rewrite: /
      destination: ''
      backends:
        - https://example.com
        - https://example2.com
      insecureSkipVerify: true       # Disable SSL verification for backend connections.
      methods:
        - GET
      healthCheck:                   # Health check configuration for the route.
        path: /health/live
        interval: 30s
        timeout: 10s
        healthyStatuses:
          - 200
          - 404
      middlewares:
        - api-forbidden-paths
        - basic-auth

# Middleware Definitions
middlewares:
  - name: basic-auth
    type: basic                     # Type of authentication (basic).
    paths:                          # Paths to protect with authentication.
      - /user
      - /admin
      - /account
    rule:                           # Authentication rules.
      username: admin
      password: admin

  - name: google-auth
    type: jwt                       # JWT-based authentication.
    paths:
      - /protected-access
    rule:
      url: https://www.googleapis.com/auth/userinfo.email
      requiredHeaders:              # Headers required for authorization.
        - Authorization
      headers:                      # Map headers between auth and backend requests.
        userId: Auth-UserId
        userCountryId: Auth-UserCountryId
      params:                       # Map parameters between auth and backend requests.
        userCountryId: countryId

  - name: api-forbidden-paths
    type: access
    paths:                          # Paths to block access.
      - /swagger-ui/*
      - /v2/swagger-ui/*
      - /api-docs/*
